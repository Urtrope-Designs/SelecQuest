/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { GameSettingsManager } from "./services/game-settings-manager";
import { HeroInitData } from "./models/hero-models";
import { AppState } from "./models/models";
import { GameSetting } from "./global/game-setting";
import { TaskMode } from "./models/task-models";
export namespace Components {
    interface SqApp {
    }
    interface SqCreateHeroScreen {
        "gameSettingsMgr": GameSettingsManager;
    }
    interface SqPlayScreen {
        "appState": AppState;
        "availableHeroes": {hash: string, name: string}[];
        "gameSetting": GameSetting;
    }
    interface SqProgressBar {
        "currentValue": number;
        "tapOverlayText": string;
        "totalValue": number;
    }
}
export interface SqCreateHeroScreenCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSqCreateHeroScreenElement;
}
export interface SqPlayScreenCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSqPlayScreenElement;
}
declare global {
    interface HTMLSqAppElement extends Components.SqApp, HTMLStencilElement {
    }
    var HTMLSqAppElement: {
        prototype: HTMLSqAppElement;
        new (): HTMLSqAppElement;
    };
    interface HTMLSqCreateHeroScreenElement extends Components.SqCreateHeroScreen, HTMLStencilElement {
    }
    var HTMLSqCreateHeroScreenElement: {
        prototype: HTMLSqCreateHeroScreenElement;
        new (): HTMLSqCreateHeroScreenElement;
    };
    interface HTMLSqPlayScreenElement extends Components.SqPlayScreen, HTMLStencilElement {
    }
    var HTMLSqPlayScreenElement: {
        prototype: HTMLSqPlayScreenElement;
        new (): HTMLSqPlayScreenElement;
    };
    interface HTMLSqProgressBarElement extends Components.SqProgressBar, HTMLStencilElement {
    }
    var HTMLSqProgressBarElement: {
        prototype: HTMLSqProgressBarElement;
        new (): HTMLSqProgressBarElement;
    };
    interface HTMLElementTagNameMap {
        "sq-app": HTMLSqAppElement;
        "sq-create-hero-screen": HTMLSqCreateHeroScreenElement;
        "sq-play-screen": HTMLSqPlayScreenElement;
        "sq-progress-bar": HTMLSqProgressBarElement;
    }
}
declare namespace LocalJSX {
    interface SqApp {
    }
    interface SqCreateHeroScreen {
        "gameSettingsMgr"?: GameSettingsManager;
        "onStartNewHero"?: (event: SqCreateHeroScreenCustomEvent<HeroInitData>) => void;
    }
    interface SqPlayScreen {
        "appState"?: AppState;
        "availableHeroes"?: {hash: string, name: string}[];
        "gameSetting"?: GameSetting;
        "onBuildNewHero"?: (event: SqPlayScreenCustomEvent<any>) => void;
        "onClearAllGameData"?: (event: SqPlayScreenCustomEvent<any>) => void;
        "onDeleteHero"?: (event: SqPlayScreenCustomEvent<string>) => void;
        "onPlayNewHero"?: (event: SqPlayScreenCustomEvent<string>) => void;
        "onTaskModeAction"?: (event: SqPlayScreenCustomEvent<TaskMode>) => void;
    }
    interface SqProgressBar {
        "currentValue"?: number;
        "tapOverlayText"?: string;
        "totalValue"?: number;
    }
    interface IntrinsicElements {
        "sq-app": SqApp;
        "sq-create-hero-screen": SqCreateHeroScreen;
        "sq-play-screen": SqPlayScreen;
        "sq-progress-bar": SqProgressBar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "sq-app": LocalJSX.SqApp & JSXBase.HTMLAttributes<HTMLSqAppElement>;
            "sq-create-hero-screen": LocalJSX.SqCreateHeroScreen & JSXBase.HTMLAttributes<HTMLSqCreateHeroScreenElement>;
            "sq-play-screen": LocalJSX.SqPlayScreen & JSXBase.HTMLAttributes<HTMLSqPlayScreenElement>;
            "sq-progress-bar": LocalJSX.SqProgressBar & JSXBase.HTMLAttributes<HTMLSqProgressBarElement>;
        }
    }
}
