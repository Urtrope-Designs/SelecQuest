/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@ionic/core';

import {
  Observable,
} from 'rxjs/Observable';
import {
  AppState,
} from './helpers/models';

declare global {

  namespace StencilComponents {
    interface SqPlayScreen {
      'appState': Observable<AppState>;
    }
  }

  interface HTMLSqPlayScreenElement extends StencilComponents.SqPlayScreen, HTMLStencilElement {}

  var HTMLSqPlayScreenElement: {
    prototype: HTMLSqPlayScreenElement;
    new (): HTMLSqPlayScreenElement;
  };
  interface HTMLElementTagNameMap {
    'sq-play-screen': HTMLSqPlayScreenElement;
  }
  interface ElementTagNameMap {
    'sq-play-screen': HTMLSqPlayScreenElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sq-play-screen': JSXElements.SqPlayScreenAttributes;
    }
  }
  namespace JSXElements {
    export interface SqPlayScreenAttributes extends HTMLAttributes {
      'appState'?: Observable<AppState>;
      'onTaskModeAction'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SqProgressBar {
      'currentValue': number;
      'tapOverlayText': string;
      'totalValue': number;
    }
  }

  interface HTMLSqProgressBarElement extends StencilComponents.SqProgressBar, HTMLStencilElement {}

  var HTMLSqProgressBarElement: {
    prototype: HTMLSqProgressBarElement;
    new (): HTMLSqProgressBarElement;
  };
  interface HTMLElementTagNameMap {
    'sq-progress-bar': HTMLSqProgressBarElement;
  }
  interface ElementTagNameMap {
    'sq-progress-bar': HTMLSqProgressBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sq-progress-bar': JSXElements.SqProgressBarAttributes;
    }
  }
  namespace JSXElements {
    export interface SqProgressBarAttributes extends HTMLAttributes {
      'currentValue'?: number;
      'tapOverlayText'?: string;
      'totalValue'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SqApp {

    }
  }

  interface HTMLSqAppElement extends StencilComponents.SqApp, HTMLStencilElement {}

  var HTMLSqAppElement: {
    prototype: HTMLSqAppElement;
    new (): HTMLSqAppElement;
  };
  interface HTMLElementTagNameMap {
    'sq-app': HTMLSqAppElement;
  }
  interface ElementTagNameMap {
    'sq-app': HTMLSqAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sq-app': JSXElements.SqAppAttributes;
    }
  }
  namespace JSXElements {
    export interface SqAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
